// Generated by Dagger (https://google.github.io/dagger).
package com.mvvmdemo.di.module;

import com.mvvmdemo.data.local.prefs.AppPreferencesHelper;
import com.mvvmdemo.data.local.prefs.PreferencesHelper;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvidePreferencesHelperFactory implements Factory<PreferencesHelper> {
  private final AppModule module;

  private final Provider<AppPreferencesHelper> appPreferencesHelperProvider;

  public AppModule_ProvidePreferencesHelperFactory(
      AppModule module, Provider<AppPreferencesHelper> appPreferencesHelperProvider) {
    this.module = module;
    this.appPreferencesHelperProvider = appPreferencesHelperProvider;
  }

  @Override
  public PreferencesHelper get() {
    return Preconditions.checkNotNull(
        module.providePreferencesHelper(appPreferencesHelperProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static AppModule_ProvidePreferencesHelperFactory create(
      AppModule module, Provider<AppPreferencesHelper> appPreferencesHelperProvider) {
    return new AppModule_ProvidePreferencesHelperFactory(module, appPreferencesHelperProvider);
  }

  public static PreferencesHelper proxyProvidePreferencesHelper(
      AppModule instance, AppPreferencesHelper appPreferencesHelper) {
    return Preconditions.checkNotNull(
        instance.providePreferencesHelper(appPreferencesHelper),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
