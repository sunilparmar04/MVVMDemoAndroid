// Generated by Dagger (https://google.github.io/dagger).
package com.mvvmdemo.ui.livedata;

import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class LiveDataActivityModule_ProvideLiveDataAdapterFactory
    implements Factory<LiveDataAdapter> {
  private final LiveDataActivityModule module;

  public LiveDataActivityModule_ProvideLiveDataAdapterFactory(LiveDataActivityModule module) {
    this.module = module;
  }

  @Override
  public LiveDataAdapter get() {
    return Preconditions.checkNotNull(
        module.provideLiveDataAdapter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static LiveDataActivityModule_ProvideLiveDataAdapterFactory create(
      LiveDataActivityModule module) {
    return new LiveDataActivityModule_ProvideLiveDataAdapterFactory(module);
  }

  public static LiveDataAdapter proxyProvideLiveDataAdapter(LiveDataActivityModule instance) {
    return Preconditions.checkNotNull(
        instance.provideLiveDataAdapter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
