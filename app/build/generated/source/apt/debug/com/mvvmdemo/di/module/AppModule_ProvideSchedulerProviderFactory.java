// Generated by Dagger (https://google.github.io/dagger).
package com.mvvmdemo.di.module;

import com.mvvmdemo.utils.rx.SchedulerProvider;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AppModule_ProvideSchedulerProviderFactory implements Factory<SchedulerProvider> {
  private final AppModule module;

  public AppModule_ProvideSchedulerProviderFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public SchedulerProvider get() {
    return Preconditions.checkNotNull(
        module.provideSchedulerProvider(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static AppModule_ProvideSchedulerProviderFactory create(AppModule module) {
    return new AppModule_ProvideSchedulerProviderFactory(module);
  }

  public static SchedulerProvider proxyProvideSchedulerProvider(AppModule instance) {
    return Preconditions.checkNotNull(
        instance.provideSchedulerProvider(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
