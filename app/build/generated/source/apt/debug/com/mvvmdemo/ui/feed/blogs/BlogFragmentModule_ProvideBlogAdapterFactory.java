// Generated by Dagger (https://google.github.io/dagger).
package com.mvvmdemo.ui.feed.blogs;

import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class BlogFragmentModule_ProvideBlogAdapterFactory implements Factory<BlogAdapter> {
  private final BlogFragmentModule module;

  public BlogFragmentModule_ProvideBlogAdapterFactory(BlogFragmentModule module) {
    this.module = module;
  }

  @Override
  public BlogAdapter get() {
    return Preconditions.checkNotNull(
        module.provideBlogAdapter(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static BlogFragmentModule_ProvideBlogAdapterFactory create(BlogFragmentModule module) {
    return new BlogFragmentModule_ProvideBlogAdapterFactory(module);
  }

  public static BlogAdapter proxyProvideBlogAdapter(BlogFragmentModule instance) {
    return Preconditions.checkNotNull(
        instance.provideBlogAdapter(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
