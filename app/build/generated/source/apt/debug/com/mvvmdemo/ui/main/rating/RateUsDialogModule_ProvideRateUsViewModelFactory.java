// Generated by Dagger (https://google.github.io/dagger).
package com.mvvmdemo.ui.main.rating;

import com.mvvmdemo.data.DataManager;
import com.mvvmdemo.utils.rx.SchedulerProvider;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class RateUsDialogModule_ProvideRateUsViewModelFactory
    implements Factory<RateUsViewModel> {
  private final RateUsDialogModule module;

  private final Provider<DataManager> dataManagerProvider;

  private final Provider<SchedulerProvider> schedulerProvider;

  public RateUsDialogModule_ProvideRateUsViewModelFactory(
      RateUsDialogModule module,
      Provider<DataManager> dataManagerProvider,
      Provider<SchedulerProvider> schedulerProvider) {
    this.module = module;
    this.dataManagerProvider = dataManagerProvider;
    this.schedulerProvider = schedulerProvider;
  }

  @Override
  public RateUsViewModel get() {
    return Preconditions.checkNotNull(
        module.provideRateUsViewModel(dataManagerProvider.get(), schedulerProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static RateUsDialogModule_ProvideRateUsViewModelFactory create(
      RateUsDialogModule module,
      Provider<DataManager> dataManagerProvider,
      Provider<SchedulerProvider> schedulerProvider) {
    return new RateUsDialogModule_ProvideRateUsViewModelFactory(
        module, dataManagerProvider, schedulerProvider);
  }

  public static RateUsViewModel proxyProvideRateUsViewModel(
      RateUsDialogModule instance, DataManager dataManager, SchedulerProvider schedulerProvider) {
    return Preconditions.checkNotNull(
        instance.provideRateUsViewModel(dataManager, schedulerProvider),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
