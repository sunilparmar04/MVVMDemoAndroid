// Generated by Dagger (https://google.github.io/dagger).
package com.mvvmdemo.ui.feed.blogs;

import android.arch.lifecycle.ViewModelProvider;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class BlogFragmentModule_ProvideBlogViewModelFactory
    implements Factory<ViewModelProvider.Factory> {
  private final BlogFragmentModule module;

  private final Provider<BlogViewModel> blogViewModelProvider;

  public BlogFragmentModule_ProvideBlogViewModelFactory(
      BlogFragmentModule module, Provider<BlogViewModel> blogViewModelProvider) {
    this.module = module;
    this.blogViewModelProvider = blogViewModelProvider;
  }

  @Override
  public ViewModelProvider.Factory get() {
    return Preconditions.checkNotNull(
        module.provideBlogViewModel(blogViewModelProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static BlogFragmentModule_ProvideBlogViewModelFactory create(
      BlogFragmentModule module, Provider<BlogViewModel> blogViewModelProvider) {
    return new BlogFragmentModule_ProvideBlogViewModelFactory(module, blogViewModelProvider);
  }

  public static ViewModelProvider.Factory proxyProvideBlogViewModel(
      BlogFragmentModule instance, BlogViewModel blogViewModel) {
    return Preconditions.checkNotNull(
        instance.provideBlogViewModel(blogViewModel),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
